% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_nest.R
\name{convert_nest}
\alias{convert_nest}
\title{Convert Nested Columns Between Data Frame and Data Table}
\usage{
convert_nest(data, to = c("df", "dt"), nest_cols = NULL)
}
\arguments{
\item{data}{A data frame or data table containing nested columns}

\item{to}{A character string specifying the target format.
Options are "df" (data frame) or "dt" (data table). Defaults to "df".}

\item{nest_cols}{A character vector of column names containing nested data.
If NULL, the function automatically detects list columns.}
}
\value{
A data frame or data table with nested columns converted to the specified format
}
\description{
This function converts a data frame or data table, transforming nested columns
to either data frame or data table format while preserving the original data structure.
}
\details{
The function performs the following operations:
\itemize{
\item Automatically detects nested columns if not explicitly specified
\item Converts the entire data structure to the target format (data frame or data table)
\item Converts nested columns within the specified columns to the target format
\item Creates a copy of the input data to avoid modifying the original
}
}
\note{
\itemize{
\item The function preserves the original data structure
\item Nested columns are converted individually
\item Automatic detection of nested columns is based on list-type columns
}
}
\examples{
# Convert a data frame with nested columns to data table
df_nest1 <- iris |> 
  dplyr::group_nest(Species)
df_nest1
df_nest2 <- iris |>
  dplyr::group_nest(Species) |>
  dplyr::mutate(data2 = purrr::map(data, dplyr::mutate, c=2))
df_nest2
# Convert a data table with specific nested columns to data frame
convert_nest(df_nest1, to = "dt", nest_cols = c("data"))
convert_nest(df_nest2, to = "dt", nest_cols = c("data", "data2"))
# Convert a data table with nested columns to data frame
dt_nest <- mintyr::w2l_nest(data = iris, cols2l = 1:2, by = "Species")
convert_nest(dt_nest, to = "df", nest_cols = c("data")) |>
  dplyr::glimpse()
}
