% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_nest.R
\name{export_nest}
\alias{export_nest}
\title{Export Nested Data with Advanced Grouping and Flexible Handling}
\usage{
export_nest(
  nest_dt,
  group_cols = NULL,
  nest_col = NULL,
  export_path = tempdir(),
  file_type = "txt"
)
}
\arguments{
\item{nest_dt}{A \code{data.frame} or \code{data.table} containing nested columns of \code{data.frame}s,
\code{data.table}s, or lists to be exported.}

\item{group_cols}{Optional character vector specifying grouping columns.
If \code{NULL}, uses all non-nested columns as grouping variables.}

\item{nest_col}{Optional character string indicating the nested column to export.
If \code{NULL}, automatically selects the first nested column.}

\item{export_path}{Base directory path for file export. Defaults to a temporary directory
created by \code{tempdir()}.}

\item{file_type}{File export format, either \code{"txt"} (tab-separated) or \code{"csv"}.
Defaults to \code{"txt"}.}
}
\value{
An \code{integer} representing the total number of files exported successfully.
}
\description{
Exports nested data from a \code{data.frame} or \code{data.table} with sophisticated grouping
capabilities, supporting multiple nested column types and flexible file export options.
}
\details{
Comprehensive Nested Data Export Features:
\itemize{
\item Automatic detection and handling of different nested column types
\item Flexible grouping strategies with intelligent column selection
\item Hierarchical directory structure generation based on grouping columns
\item Support for mixed nested column types (\code{data.frame}, \code{data.table}, \code{list})
\item Multi-threaded file writing for enhanced performance
\item Informative messaging and warning system
}

Nested Column Detection Hierarchy:
\enumerate{
\item Prioritizes \code{data.frame}/\code{data.table} nested columns
\item Falls back to regular \code{list} columns if no \code{data.frame} columns exist
}

Grouping Column Selection Strategy:
\enumerate{
\item When \code{group_cols} is \code{NULL}, uses all non-nested columns
\item Provides warnings about unused non-nested columns
\item Validates provided group columns
}

File Export Characteristics:
\itemize{
\item Supports \code{"txt"} (tab-separated) and \code{"csv"} formats
\item Uses multi-threading via \code{parallel::detectCores()}
\item Creates nested directory structure based on grouping variables
}
}
\note{
Key Capabilities:
\itemize{
\item Handles complex nested data structures
\item Performs type conversion for nested content
\item Utilizes multi-threaded file export for optimal performance
\item Provides comprehensive column selection feedback
}
}
\examples{
\dontrun{
library(data.table)

# Create sample nested data
nested_data <- `data.table`(
  group = c("A", "B", "A"),
  subgroup = c(1, 2, 3),
  data = list(
    `data.frame`(x = 1:3, y = 4:6),
    `data.frame`(x = 7:9, y = 10:12),
    `data.frame`(x = 13:15, y = 16:18)
  )
)

# Export nested data with default settings
export_nest(nested_data)

# Export with specific grouping and file type
export_nest(
  nested_data, 
  group_cols = c("group"),
  nest_col = "data", 
  file_type = `"csv"`
)
}

# Data Nesting Operation
dt_nest <- w2l_nest(data = iris, cols2l = 1:2, by = "Species")
# Export Nested Data
export_nest(nest_dt = dt_nest, nest_col = "data",
            group_cols = c("name", "Species"))
# Check Export Results
files <- list.files(path = tempdir(), pattern = "txt", recursive = TRUE, full.names = TRUE)
files
file.remove(files)
}
