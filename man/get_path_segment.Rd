% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_path_segment.R
\name{get_path_segment}
\alias{get_path_segment}
\title{Extract Specific Segments from File Paths}
\usage{
get_path_segment(paths, n = 1)
}
\arguments{
\item{paths}{A non-empty character vector containing file paths, where each path is a string with segments separated by forward slashes (\code{/}). This parameter cannot be empty.}

\item{n}{An integer specifying which segment to extract from each path. If \code{n} is positive, the function extracts the \code{n}-th segment from the beginning of the path. If \code{n} is negative, the function extracts the \code{n}-th segment from the end of the path. \code{n} cannot be zero.}
}
\value{
A character vector of the extracted segments. If a path does not have the requested segment, \code{NA_character_} is returned for that path.
}
\description{
The \code{get_path_segment} function extracts specific segments from file paths provided as character strings. Segments can be extracted from either the beginning or the end of the path, depending on the value of \code{n}.
}
\details{
The function operates as follows:
\enumerate{
\item Validates that \code{paths} is a non-empty character vector and that \code{n} is a non-zero numeric value.
\item Splits each path in \code{paths} into segments based on the forward slash (\code{/}) delimiter.
\item Extracts the specified segment from each set of path segments:
\itemize{
\item If \code{n > 0}, the function extracts the \code{n}-th segment counting from the start of the path.
\item If \code{n < 0}, the function extracts the \code{n}-th segment counting from the end of the path.
}
\item If a path does not contain the specified segment, \code{NA_character_} is returned for that path.
}
}
\note{
\itemize{
\item The \code{paths} parameter must be a non-empty character vector.
\item The \code{n} parameter must be a non-zero numeric value.
\item If \code{n} is zero, the function will raise an error.
\item The function handles empty strings and paths with consecutive slashes appropriately.
}
}
\examples{
# Example usage demonstrations
paths <- c("/home/user/documents", "/var/log/system", "/usr/local/bin")
# Positive index example
get_path_segment(paths, 2)
# Negative index example
get_path_segment(paths, -2)
}
